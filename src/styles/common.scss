// 通用样式集合文件 - 包含变量、混合宏和基础样式
@use "sass:map";

// 颜色变量
:root {
  // 主色调
  --primary-color: #007cf0;
  --primary-light: #00bcd4;
  --primary-dark: #0052a2;
  --primary-gradient: linear-gradient(90deg, #007cf0, #00dfd8);
  
  // 界面色
  --bg-color: #0d1117;
  --bg-alt-color: #161b22;
  --text-color: #f0f6fc;
  --text-muted: #8b949e;
  --border-color: #30363d;
  
  // 辅助色
  --success-color: #2ecc71;
  --warning-color: #f39c12;
  --danger-color: #e74c3c;
  --info-color: #3498db;
}

// 断点变量
$breakpoints: (
  'mobile': 767px,
  'tablet': 991px,
  'desktop': 1199px,
  'large': 1399px
);

// 响应式混合宏
@mixin responsive($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (max-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @if type-of($breakpoint) == number {
      @media (max-width: #{$breakpoint}px) {
        @content;
      }
    } @else {
      @warn "无效的断点: #{$breakpoint}";
    }
  }
}

// Flex布局混合宏
@mixin flex($direction: row, $justify: flex-start, $align: flex-start, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 绝对定位居中混合宏
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 文本截断混合宏
@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// 渐变背景混合宏
@mixin gradient-bg($direction: to right, $start-color: var(--primary-color), $end-color: var(--primary-light)) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// 动画混合宏
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition: $property $duration $timing;
}

// 盒子阴影混合宏
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  } @else if $level == 3 {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
  } @else if $level == 4 {
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
  }
}

// 炫酷文本样式
@mixin fancy-text {
  background-image: linear-gradient(90deg, #007cf0, #00dfd8);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-weight: bold;
}

/* 基础重置样式 */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 16px;
  scroll-behavior: smooth;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  line-height: 1.6;
  color: var(--text-color);
  background-color: var(--bg-color);
  overflow-x: hidden;
}

a {
  text-decoration: none;
  color: inherit;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

/* 排版基础样式 */
h1, h2, h3, h4, h5, h6 {
  margin-bottom: 1.5rem;
  line-height: 1.2;
}

h1 {
  font-size: 4rem;
  font-weight: 700;
  
  @include responsive(mobile) {
    font-size: 2.5rem;
  }
}

h2 {
  font-size: 3rem;
  font-weight: 600;
  
  @include responsive(mobile) {
    font-size: 2rem;
  }
}

h3 {
  font-size: 2.25rem;
  
  @include responsive(mobile) {
    font-size: 1.75rem;
  }
}

p {
  margin-bottom: 1.5rem;
  font-size: 1.1rem;
  
  &.lead {
    font-size: 1.5rem;
    line-height: 1.6;
    font-weight: 300;
    
    @include responsive(mobile) {
      font-size: 1.2rem;
    }
  }
}

/* 文本属性辅助类 */
.text-center { text-align: center; }
.text-right { text-align: right; }
.text-primary { color: var(--primary-color); }
.font-light { font-weight: 300; }
.font-bold { font-weight: 700; }

/* 容器样式 */
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  
  @include responsive(mobile) {
    padding: 0 1rem;
  }
}

/* 区块样式 */
.section {
  padding: 6rem 0;
  position: relative;
  overflow: hidden;
  
  @include responsive(mobile) {
    padding: 3rem 0;
  }
  
  &.hero {
    min-height: 100vh;
    @include flex(column, center, center);
    text-align: center;
    color: var(--text-color);
    background-color: var(--bg-color);
  }
}

/* 间距辅助类 */
.mb-1 { margin-bottom: 0.5rem; }
.mb-2 { margin-bottom: 1rem; }
.mb-3 { margin-bottom: 1.5rem; }
.mb-4 { margin-bottom: 2rem; }
.mb-5 { margin-bottom: 3rem; }

.mt-1 { margin-top: 0.5rem; }
.mt-2 { margin-top: 1rem; }
.mt-3 { margin-top: 1.5rem; }
.mt-4 { margin-top: 2rem; }
.mt-5 { margin-top: 3rem; }

.py-1 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
.py-2 { padding-top: 1rem; padding-bottom: 1rem; }
.py-3 { padding-top: 1.5rem; padding-bottom: 1.5rem; }
.py-4 { padding-top: 2rem; padding-bottom: 2rem; }
.py-5 { padding-top: 3rem; padding-bottom: 3rem; }

/* 网格系统 */
.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  gap: 2rem;
  
  @include responsive(mobile) {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
}

/* 弹性布局助手类 */
.flex {
  display: flex;
  
  &.flex-center {
    @include flex(row, center, center);
  }
  
  &.flex-between {
    justify-content: space-between;
  }
  
  &.flex-column {
    flex-direction: column;
  }
  
  &.flex-wrap {
    flex-wrap: wrap;
  }
}

/* 按钮样式组件 */
.btn {
  display: inline-block;
  padding: 0.75rem 2rem;
  border-radius: 30px;
  font-weight: 500;
  cursor: pointer;
  @include transition(all, 0.3s, ease);
  font-size: 1rem;
  letter-spacing: 0.5px;
  
  &.btn-primary {
    @include gradient-bg(to right, var(--primary-color), var(--primary-light));
    color: white;
    border: none;
    
    &:hover {
      transform: translateY(-2px);
      @include box-shadow(3);
    }
  }
  
  &.btn-outline {
    background: transparent;
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.5);
    
    &:hover {
      background: rgba(255, 255, 255, 0.1);
      border-color: white;
    }
  }
}
